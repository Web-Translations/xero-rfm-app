name: Publish Docker Images

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Derive image prefix
        id: vars
        run: |
          IMAGE_PREFIX=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          echo "image_prefix=${IMAGE_PREFIX}" >> "$GITHUB_OUTPUT"

      - name: Extract metadata (fpm)
        id: meta-fpm
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.vars.outputs.image_prefix }}-fpm
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
            type=ref,event=tag
            type=sha

      - name: Build and push fpm image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          target: fpm
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-fpm.outputs.tags }}
          labels: ${{ steps.meta-fpm.outputs.labels }}

      - name: Extract metadata (nginx)
        id: meta-nginx
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.vars.outputs.image_prefix }}-nginx
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
            type=ref,event=tag
            type=sha

      - name: Build and push nginx image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          target: nginx
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-nginx.outputs.tags }}
          labels: ${{ steps.meta-nginx.outputs.labels }}

      - name: Trigger Jenkins job
        if: github.event_name != 'pull_request'
        env:
          JENKINS_URL: ${{ secrets.JENKINS_URL }}
          JENKINS_JOB: ${{ vars.JENKINS_JOB }}
          JENKINS_API_TOKEN: ${{ secrets.JENKINS_API_TOKEN }}
          COMMIT_SHA: ${{ github.sha }}
        run: |
          curl --fail --silent --show-error --header "Content-Type: application/x-www-form-urlencoded" \
            --user "github:${JENKINS_API_TOKEN}" -L -X POST \
            "${JENKINS_URL}/job/${JENKINS_JOB}/buildWithParameters?COMMIT_SHA=${COMMIT_SHA}"
